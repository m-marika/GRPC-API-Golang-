// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: calcLab/calcLab.proto

//import "google/api/annotations.proto";

package grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamName   string  `protobuf:"bytes,1,opt,name=ParamName,proto3" json:"ParamName,omitempty"`
	ParamResult float32 `protobuf:"fixed32,2,opt,name=ParamResult,proto3" json:"ParamResult,omitempty"`
	S           int32   `protobuf:"varint,3,opt,name=S,proto3" json:"S,omitempty"`
}

func (x *LimitRequest) Reset() {
	*x = LimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitRequest) ProtoMessage() {}

func (x *LimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitRequest.ProtoReflect.Descriptor instead.
func (*LimitRequest) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{0}
}

func (x *LimitRequest) GetParamName() string {
	if x != nil {
		return x.ParamName
	}
	return ""
}

func (x *LimitRequest) GetParamResult() float32 {
	if x != nil {
		return x.ParamResult
	}
	return 0
}

func (x *LimitRequest) GetS() int32 {
	if x != nil {
		return x.S
	}
	return 0
}

type LimitRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lower        float32 `protobuf:"fixed32,1,opt,name=Lower,proto3" json:"Lower,omitempty"`
	Upper        float32 `protobuf:"fixed32,2,opt,name=Upper,proto3" json:"Upper,omitempty"`
	LowerUnbound bool    `protobuf:"varint,3,opt,name=LowerUnbound,proto3" json:"LowerUnbound,omitempty"`
	UpperUnbound bool    `protobuf:"varint,4,opt,name=UpperUnbound,proto3" json:"UpperUnbound,omitempty"`
}

func (x *LimitRange) Reset() {
	*x = LimitRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitRange) ProtoMessage() {}

func (x *LimitRange) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitRange.ProtoReflect.Descriptor instead.
func (*LimitRange) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{1}
}

func (x *LimitRange) GetLower() float32 {
	if x != nil {
		return x.Lower
	}
	return 0
}

func (x *LimitRange) GetUpper() float32 {
	if x != nil {
		return x.Upper
	}
	return 0
}

func (x *LimitRange) GetLowerUnbound() bool {
	if x != nil {
		return x.LowerUnbound
	}
	return false
}

func (x *LimitRange) GetUpperUnbound() bool {
	if x != nil {
		return x.UpperUnbound
	}
	return false
}

type LimitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ranges []*LimitRange `protobuf:"bytes,1,rep,name=Ranges,proto3" json:"Ranges,omitempty"`
}

func (x *LimitReply) Reset() {
	*x = LimitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitReply) ProtoMessage() {}

func (x *LimitReply) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitReply.ProtoReflect.Descriptor instead.
func (*LimitReply) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{2}
}

func (x *LimitReply) GetRanges() []*LimitRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type DNAcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C int32 `protobuf:"varint,1,opt,name=C,proto3" json:"C,omitempty"`
}

func (x *DNAcon) Reset() {
	*x = DNAcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNAcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNAcon) ProtoMessage() {}

func (x *DNAcon) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNAcon.ProtoReflect.Descriptor instead.
func (*DNAcon) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{3}
}

func (x *DNAcon) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

type ResultCleanStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S int32 `protobuf:"varint,1,opt,name=S,proto3" json:"S,omitempty"`
}

func (x *ResultCleanStage) Reset() {
	*x = ResultCleanStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultCleanStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultCleanStage) ProtoMessage() {}

func (x *ResultCleanStage) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultCleanStage.ProtoReflect.Descriptor instead.
func (*ResultCleanStage) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{4}
}

func (x *ResultCleanStage) GetS() int32 {
	if x != nil {
		return x.S
	}
	return 0
}

type DNA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C int32 `protobuf:"varint,1,opt,name=C,proto3" json:"C,omitempty"`
	N int32 `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
}

func (x *DNA) Reset() {
	*x = DNA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNA) ProtoMessage() {}

func (x *DNA) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNA.ProtoReflect.Descriptor instead.
func (*DNA) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{5}
}

func (x *DNA) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *DNA) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

type ResultVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vsample float32 `protobuf:"fixed32,4,opt,name=Vsample,proto3" json:"Vsample,omitempty"`
	Vsalt   float32 `protobuf:"fixed32,2,opt,name=Vsalt,proto3" json:"Vsalt,omitempty"`
	Vwater  float32 `protobuf:"fixed32,3,opt,name=Vwater,proto3" json:"Vwater,omitempty"`
	FlagV   bool    `protobuf:"varint,1,opt,name=flagV,proto3" json:"flagV,omitempty"`
}

func (x *ResultVolume) Reset() {
	*x = ResultVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultVolume) ProtoMessage() {}

func (x *ResultVolume) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultVolume.ProtoReflect.Descriptor instead.
func (*ResultVolume) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{6}
}

func (x *ResultVolume) GetVsample() float32 {
	if x != nil {
		return x.Vsample
	}
	return 0
}

func (x *ResultVolume) GetVsalt() float32 {
	if x != nil {
		return x.Vsalt
	}
	return 0
}

func (x *ResultVolume) GetVwater() float32 {
	if x != nil {
		return x.Vwater
	}
	return 0
}

func (x *ResultVolume) GetFlagV() bool {
	if x != nil {
		return x.FlagV
	}
	return false
}

type DNAconQ1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q1 int32 `protobuf:"varint,1,opt,name=Q1,proto3" json:"Q1,omitempty"`
}

func (x *DNAconQ1) Reset() {
	*x = DNAconQ1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNAconQ1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNAconQ1) ProtoMessage() {}

func (x *DNAconQ1) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNAconQ1.ProtoReflect.Descriptor instead.
func (*DNAconQ1) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{7}
}

func (x *DNAconQ1) GetQ1() int32 {
	if x != nil {
		return x.Q1
	}
	return 0
}

type ResultVolumeQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vq1   float32 `protobuf:"fixed32,1,opt,name=Vq1,proto3" json:"Vq1,omitempty"`
	Vnete float32 `protobuf:"fixed32,2,opt,name=Vnete,proto3" json:"Vnete,omitempty"`
	Nq1   float32 `protobuf:"fixed32,3,opt,name=Nq1,proto3" json:"Nq1,omitempty"`
}

func (x *ResultVolumeQ) Reset() {
	*x = ResultVolumeQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calcLab_calcLab_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultVolumeQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultVolumeQ) ProtoMessage() {}

func (x *ResultVolumeQ) ProtoReflect() protoreflect.Message {
	mi := &file_calcLab_calcLab_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultVolumeQ.ProtoReflect.Descriptor instead.
func (*ResultVolumeQ) Descriptor() ([]byte, []int) {
	return file_calcLab_calcLab_proto_rawDescGZIP(), []int{8}
}

func (x *ResultVolumeQ) GetVq1() float32 {
	if x != nil {
		return x.Vq1
	}
	return 0
}

func (x *ResultVolumeQ) GetVnete() float32 {
	if x != nil {
		return x.Vnete
	}
	return 0
}

func (x *ResultVolumeQ) GetNq1() float32 {
	if x != nil {
		return x.Nq1
	}
	return 0
}

var File_calcLab_calcLab_proto protoreflect.FileDescriptor

var file_calcLab_calcLab_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x61, 0x6c, 0x63, 0x4c, 0x61, 0x62, 0x2f, 0x63, 0x61, 0x6c, 0x63, 0x4c, 0x61,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70,
	0x69, 0x22, 0x5c, 0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x53, 0x22,
	0x80, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x70, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x55, 0x70, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x55, 0x70, 0x70, 0x65, 0x72, 0x55, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x55, 0x70, 0x70, 0x65, 0x72, 0x55, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2c, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x16,
	0x0a, 0x06, 0x44, 0x4e, 0x41, 0x63, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x43, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x43, 0x22, 0x20, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x53, 0x22, 0x21, 0x0a, 0x03, 0x44, 0x4e, 0x41, 0x12,
	0x0c, 0x0a, 0x01, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x43, 0x12, 0x0c, 0x0a,
	0x01, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x4e, 0x22, 0x6c, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x56, 0x77, 0x61,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x56, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x56, 0x22, 0x1a, 0x0a, 0x08, 0x44, 0x4e, 0x41,
	0x63, 0x6f, 0x6e, 0x51, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x51, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x51, 0x31, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x71, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x56, 0x71, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x6e, 0x65, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x6e, 0x65, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4e, 0x71, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4e, 0x71, 0x31,
	0x32, 0xf7, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61,
	0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3c, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x4e, 0x41, 0x63, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x4e, 0x41, 0x1a, 0x16, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x51, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x4e,
	0x41, 0x63, 0x6f, 0x6e, 0x51, 0x31, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x51, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calcLab_calcLab_proto_rawDescOnce sync.Once
	file_calcLab_calcLab_proto_rawDescData = file_calcLab_calcLab_proto_rawDesc
)

func file_calcLab_calcLab_proto_rawDescGZIP() []byte {
	file_calcLab_calcLab_proto_rawDescOnce.Do(func() {
		file_calcLab_calcLab_proto_rawDescData = protoimpl.X.CompressGZIP(file_calcLab_calcLab_proto_rawDescData)
	})
	return file_calcLab_calcLab_proto_rawDescData
}

var file_calcLab_calcLab_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_calcLab_calcLab_proto_goTypes = []interface{}{
	(*LimitRequest)(nil),     // 0: grpc_api.LimitRequest
	(*LimitRange)(nil),       // 1: grpc_api.LimitRange
	(*LimitReply)(nil),       // 2: grpc_api.LimitReply
	(*DNAcon)(nil),           // 3: grpc_api.DNAcon
	(*ResultCleanStage)(nil), // 4: grpc_api.ResultCleanStage
	(*DNA)(nil),              // 5: grpc_api.DNA
	(*ResultVolume)(nil),     // 6: grpc_api.ResultVolume
	(*DNAconQ1)(nil),         // 7: grpc_api.DNAconQ1
	(*ResultVolumeQ)(nil),    // 8: grpc_api.ResultVolumeQ
}
var file_calcLab_calcLab_proto_depIdxs = []int32{
	1, // 0: grpc_api.LimitReply.Ranges:type_name -> grpc_api.LimitRange
	3, // 1: grpc_api.CalculateLabParam.CleanStage:input_type -> grpc_api.DNAcon
	5, // 2: grpc_api.CalculateLabParam.Volume:input_type -> grpc_api.DNA
	7, // 3: grpc_api.CalculateLabParam.VolumeQ:input_type -> grpc_api.DNAconQ1
	0, // 4: grpc_api.CalculateLabParam.Limit:input_type -> grpc_api.LimitRequest
	4, // 5: grpc_api.CalculateLabParam.CleanStage:output_type -> grpc_api.ResultCleanStage
	6, // 6: grpc_api.CalculateLabParam.Volume:output_type -> grpc_api.ResultVolume
	8, // 7: grpc_api.CalculateLabParam.VolumeQ:output_type -> grpc_api.ResultVolumeQ
	2, // 8: grpc_api.CalculateLabParam.Limit:output_type -> grpc_api.LimitReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_calcLab_calcLab_proto_init() }
func file_calcLab_calcLab_proto_init() {
	if File_calcLab_calcLab_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calcLab_calcLab_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNAcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultCleanStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNAconQ1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calcLab_calcLab_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultVolumeQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calcLab_calcLab_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calcLab_calcLab_proto_goTypes,
		DependencyIndexes: file_calcLab_calcLab_proto_depIdxs,
		MessageInfos:      file_calcLab_calcLab_proto_msgTypes,
	}.Build()
	File_calcLab_calcLab_proto = out.File
	file_calcLab_calcLab_proto_rawDesc = nil
	file_calcLab_calcLab_proto_goTypes = nil
	file_calcLab_calcLab_proto_depIdxs = nil
}
